@model ICollection<Veiculo>

@{
    ViewData["Title"] = "Veículos";
}

<h1>Veículos Disponíveis - <b>@ViewBag.qtd</b></h1>

<msg mensagem="@TempData["msg"]"></msg>

<!-- Formulário de pesquisa, por padrão quando utilizamos asp-... o formulário é post -->

<form asp-action="index" method="get" class="form-inline">
    <input placeholder="Digite o modelo" name="modelo" class="form-control mr-2" type="text" /> 
    <input placeholder="Digite o ano" name="ano" class="form-control mr-2" type="text" />
    <select name="cliente" class="form-control mr-2" asp-items="@ViewBag.clientes" > 
        <option>Cliente</option>
    </select>
    <input type="submit" value="Pesquisar" class="btn btn-success" />
</form>

<div>
    Resultados encontrados: @Model.Count() <!-- Count da lista = size() -->
</div>

<div class="text-right">
    <a asp-action="cadastrar" class="btn btn-outline-primary mb-2">Cadastrar</a>
</div>

<table class="table table-striped">

    <tr>
        <th>Modelo</th>
        <th>Ano</th>
        <th>Data Fabricação</th>
        <th>Novo</th>
        <th>Combustível</th>
        <th>Placa</th>
        <th>Cliente</th>
        <th>Teste Drive</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@item.Modelo</td>
            <td>@item.Ano</td>
            <td>@item.DataFabricacao.ToShortDateString()</td>
            <td>@(item.Novo ? "Sim" : "Não")</td>
            <td>@item.Combustivel</td>
            <td>@item.Placa?.Numero</td>
            <td>@item.Cliente?.Nome</td>
            <td>@(item.TestDrive ? "Sim" : "Não")</td>
            <!-- ? valida se exise um objeto antes de acessar a propriedade -->
            <td>
                <a asp-action="editar" asp-route-id="@item.VeiculoId" class="btn btn-sm btn-outline-dark">Editar</a>
                <button onclick="veiculoId.value = @item.VeiculoId" type="button" class="btn btn-sm btn-danger" data-toggle="modal" data-target="#exampleModal">
                    Excluir
                </button>
                <a asp-action="exibirCliente" asp-route-id="@item.VeiculoId" class="btn btn-sm btn-outline-success">Test Drive</a>
            </td>
        </tr>
    }

</table>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirmação</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Deseja excluir o veículo?
            </div>
            <div class="modal-footer">
                <!-- Criar um formulário que envia o ID do veículo que será excluído
                     Modificar o botão de enviar (Sim) para type = submit
                    Definir um id para o campo oculto, que será utilizado no onclick do botao do modal 
                    como foi definicido o asp-action "remover" este deve ser o nome do método no Controller
                    Public IactionResult Remover passando o parâmetro name="id" que também será recebido no Controller -->
                <form asp-action="remover">
                    <input type="hidden" name="id" id="veiculoId" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger">Sim</button>
                </form>
            </div>
        </div>
    </div>
</div>




